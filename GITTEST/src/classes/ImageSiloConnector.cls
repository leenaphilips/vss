public class ImageSiloConnector {

  //--f*** you salesforce
  private static final string TEST_LOGIN_REQ = '<?xml version="1.0" encoding="UTF-8"?><LOGINUSEREX3_REQUEST><FUNCTION><NAME>LOGINUSEREX3</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><USERNAME>cvitone</USERNAME><PASSWORD>Fr1end</PASSWORD><SOURCEIP /><CORLICTYPE /><CLIENTPINGABLE>0</CLIENTPINGABLE><REMOTEAUTH>0</REMOTEAUTH></PARAMETERS></FUNCTION></LOGINUSEREX3_REQUEST>';
  private static final string TEST_LOGIN_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_LoginUserEx3><ENTITYID>6590</ENTITYID><RESULTS><RESULTVAL>0</RESULTVAL><CHANGEPWD>0</CHANGEPWD><RESULTMSG /></RESULTS><USERNAME>cvitone</USERNAME><DEMOMODE>0</DEMOMODE><ALTDGPATH>0</ALTDGPATH><PINGTIME>0</PINGTIME><SESSIONID>B7C3479AA80723CECE037D0B6EBD8587E8B977A9D6CB9637FF1547A5230B824FA8FC19320D07755D764822B1AAEF28A4AA7C2603342AC70DB4FF8F3C70ABB371</SESSIONID><DECIMALCHAR>.</DECIMALCHAR></PVDM_LoginUserEx3>';
  private static final string TEST_LOAD_REQ = '<?xml version="1.0" encoding="UTF-8"?><LoadSystemAccess_REQUEST><FUNCTION><NAME>LoadSystemAccess</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><SESSIONID>B7C3479AA80723CECE037D0B6EBD8587E8B977A9D6CB9637FF1547A5230B824FA8FC19320D07755D764822B1AAEF28A4AA7C2603342AC70DB4FF8F3C70ABB371</SESSIONID><SOURCEIP /></PARAMETERS></FUNCTION></LoadSystemAccess_REQUEST>';
  private static final string TEST_LOAD_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_LoadSystemAccess><ENTITYID>6590</ENTITYID><GOODSESSION>1</GOODSESSION><SESSIONID>DDA772BA1DEB28EAC02EF1482F68FE5CDF3B479F5B6738AB800CD4ADE702B0F5A19236AD69D854E095A62C0FD7B2B156286CEE111500F186AE2B7021BE34DFF7</SESSIONID><ENTITYADMINSYSTEM>1</ENTITYADMINSYSTEM><ENTITYADMINWORKFLOW>1</ENTITYADMINWORKFLOW><ENTLICLITESCAN>1</ENTLICLITESCAN><ENTLICWORKFLOWTOOLKIT>0</ENTLICWORKFLOWTOOLKIT><USERNAME>CVITONE</USERNAME><USERFULLNAME>Chris Vitone</USERFULLNAME><USERID>34</USERID><DEMOMODE>0</DEMOMODE><LICWORKFLOW>0</LICWORKFLOW><ADMINPACKLICENSE>1</ADMINPACKLICENSE><PVDM_UserProjectAccess><PROJECT PROJID="5"><PROJNAME>V3 TEST</PROJNAME><RIGHTS>-1</RIGHTS><DOCASSOCS>0</DOCASSOCS><PVDM_ProjectAttributes><PROJECTATTRIBUTES><DOCUMENT_FIELDS COUNT="10"><FIELD FIELDNUM="1"><NAME>Last Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>1</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="2"><NAME>EFI Transaction ID</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>2</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="3"><NAME>Utility Account Number</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>3</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="4"><NAME>File Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>4</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="5"><NAME>Program Code</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>5</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="6"><NAME>FDC REBATE NUMBER</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>6</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="7"><NAME>DOCUMENT TYPE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>7</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>APPLICATION  ATTACHMENT  FOLLOWUP</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="8"><NAME>DOCUMENT STATUS</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>8</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>PROCESSED    READY   WAIT</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="9"><NAME>WORKED</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>9</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="10"><NAME>SOURCE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>10</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD></DOCUMENT_FIELDS><FULLTEXT>1</FULLTEXT></PROJECTATTRIBUTES></PVDM_ProjectAttributes><FOLDERCOUNT>1</FOLDERCOUNT></PROJECT></PVDM_UserProjectAccess><RECRETLISTS /><NOTIFYCOUNT>43</NOTIFYCOUNT><DECIMALCHAR>.</DECIMALCHAR><USERSETTINGS><PVDM_UserSettings><USERRIGHTS><CHANGEPASSWORD>0</CHANGEPASSWORD></USERRIGHTS></PVDM_UserSettings></USERSETTINGS><USERWORKFLOW>0</USERWORKFLOW></PVDM_LoadSystemAccess>';
  private static final string TEST_SEARCH_REQ = '<?xml version="1.0" encoding="UTF-8"?><SubmitSearchCriteria_Project_REQUEST><FUNCTION><NAME>SubmitSearchCriteria_Project</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><SESSIONID>B7C3479AA80723CECE037D0B6EBD8587E8B977A9D6CB9637FF1547A5230B824FA8FC19320D07755D764822B1AAEF28A4AA7C2603342AC70DB4FF8F3C70ABB371</SESSIONID><PARAMETERS /><SOURCEIP /><FIELDNAMES>File Name | Utility Account Number | EFI Transaction ID | Program Code | Last Name</FIELDNAMES><FROMFIELDS> |  |  |  | VITONE</FROMFIELDS><TOFIELDS /><SORTBY /><SEARCHTYPE>AND</SEARCHTYPE><FTQUERY /><FTOPTIONS /><PROJID>5</PROJID></PARAMETERS></FUNCTION></SubmitSearchCriteria_Project_REQUEST>';
  private static final string TEST_SEARCH_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_SubmitSearchCriteria_Project><ENTITYID>6590</ENTITYID><GOODSESSION>1</GOODSESSION><SESSIONID>DB0BD7048C4D9ED4049FEF9C1D54B429D8CEBCFB4F281E400AA56BE33DE9CAAFE35AFBB9A58B17DDC9D03013705EE09FF92E1AD2515934D2AAC96DBAFEBAB625</SESSIONID><ENTITYADMINSYSTEM>1</ENTITYADMINSYSTEM><ENTITYADMINWORKFLOW>1</ENTITYADMINWORKFLOW><ENTLICLITESCAN>1</ENTLICLITESCAN><ENTLICWORKFLOWTOOLKIT>0</ENTLICWORKFLOWTOOLKIT><USERNAME>CVITONE</USERNAME><USERFULLNAME>Chris Vitone</USERFULLNAME><USERID>34</USERID><DEMOMODE>0</DEMOMODE><LICWORKFLOW>0</LICWORKFLOW><ADMINPACKLICENSE>1</ADMINPACKLICENSE><RESULTVAL>0</RESULTVAL><RESULTMSG /><PROJECT PROJID="5"><PROJNAME>V3 TEST</PROJNAME><RIGHTS>-1</RIGHTS><DOCASSOCS>0</DOCASSOCS><PVDM_ProjectAttributes><PROJECTATTRIBUTES><DOCUMENT_FIELDS COUNT="10"><FIELD FIELDNUM="1"><NAME>Last Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>1</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="2"><NAME>EFI Transaction ID</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>2</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="3"><NAME>Utility Account Number</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>3</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="4"><NAME>File Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>4</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="5"><NAME>Program Code</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>5</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="6"><NAME>FDC REBATE NUMBER</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>6</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="7"><NAME>DOCUMENT TYPE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>7</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>APPLICATION   ATTACHMENT  FOLLOWUP</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="8"><NAME>DOCUMENT STATUS</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>8</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>PROCESSED    READY   WAIT</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="9"><NAME>WORKED</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>9</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="10"><NAME>SOURCE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>10</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD></DOCUMENT_FIELDS><FULLTEXT>1</FULLTEXT></PROJECTATTRIBUTES></PVDM_ProjectAttributes></PROJECT><NOTIFYCOUNT>43</NOTIFYCOUNT><DECIMALCHAR>.</DECIMALCHAR><USERSETTINGS><PVDM_UserSettings><USERRIGHTS><CHANGEPASSWORD>0</CHANGEPASSWORD></USERRIGHTS></PVDM_UserSettings></USERSETTINGS><USERWORKFLOW>0</USERWORKFLOW></PVDM_SubmitSearchCriteria_Project>';
  private static final String TEST_LIST_REQ = '<?xml version="1.0" encoding="UTF-8"?><ExecuteQuery_Project_REQUEST><FUNCTION><NAME>ExecuteQuery_Project</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><SESSIONID>B7C3479AA80723CECE037D0B6EBD8587E8B977A9D6CB9637FF1547A5230B824FA8FC19320D07755D764822B1AAEF28A4AA7C2603342AC70DB4FF8F3C70ABB371</SESSIONID><PARAMETERS /><SOURCEIP /><FORMATVALUES>true</FORMATVALUES><PROJID>5</PROJID><STARTINGDOCID>0</STARTINGDOCID></PARAMETERS></FUNCTION></ExecuteQuery_Project_REQUEST>';
  private static final String TEST_LIST_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_ExecuteQuery_Project><ENTITYID>6590</ENTITYID><GOODSESSION>1</GOODSESSION><SESSIONID>0101A4005B64EDE8F2FE0B91441417E354484740412038CF881B89161D26A67BE6EE41CE306CCE813B2852AB2EECE12501B82215BF362DE6D81FEB09E87AE4A5</SESSIONID><ENTITYADMINSYSTEM>1</ENTITYADMINSYSTEM><ENTITYADMINWORKFLOW>1</ENTITYADMINWORKFLOW><ENTLICLITESCAN>1</ENTLICLITESCAN><ENTLICWORKFLOWTOOLKIT>0</ENTLICWORKFLOWTOOLKIT><USERNAME>CVITONE</USERNAME><USERFULLNAME>Chris Vitone</USERFULLNAME><USERID>34</USERID><DEMOMODE>0</DEMOMODE><LICWORKFLOW>0</LICWORKFLOW><ADMINPACKLICENSE>1</ADMINPACKLICENSE><RESULTVAL>0</RESULTVAL><RESULTMSG /><GLOBALSEARCH>0</GLOBALSEARCH><SEARCHRESULTS><SEARCHINDEXES>1</SEARCHINDEXES><SEARCHFULLTEXT>0</SEARCHFULLTEXT><DOCS><DOC DOCID="97"><DUPEID>0</DUPEID><SECURED>0</SECURED><CHECKOUTTIME /><CHECKOUTUSERID>0</CHECKOUTUSERID><SOURCEDOCID>0</SOURCEDOCID><DGID>6</DGID><FTINDEX>2000</FTINDEX><CREATEDATE>2012-08-06 07:35:46</CREATEDATE><LOCKDATE /><LOCKINFO /><DESTDATE /><DESTINFO /><DESTLISTID /><DOCINDEX1>VITONE</DOCINDEX1><DOCINDEX2>345</DOCINDEX2><DOCINDEX3>NVC847</DOCINDEX3><DOCINDEX4>BETA.txt</DOCINDEX4><DOCINDEX5>K1</DOCINDEX5><DOCINDEX6>[Blank]</DOCINDEX6><DOCINDEX7>[Blank]</DOCINDEX7><DOCINDEX8>[Blank]</DOCINDEX8><DOCINDEX9>INCOMING</DOCINDEX9><DOCINDEX10>[Blank]</DOCINDEX10></DOC></DOCS><SORTBY /><SORTORDER>+</SORTORDER><MOREAVAILABLE>0</MOREAVAILABLE><NUMLISTED>4</NUMLISTED><PROJECT PROJID="5"><PROJNAME>V3 TEST</PROJNAME><RIGHTS>-1</RIGHTS><DOCASSOCS>0</DOCASSOCS><PVDM_ProjectAttributes><PROJECTATTRIBUTES><DOCUMENT_FIELDS COUNT="10"><FIELD FIELDNUM="1"><NAME>Last Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>1</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="2"><NAME>EFI Transaction ID</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>2</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="3"><NAME>Utility Account Number</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>3</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="4"><NAME>File Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>4</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="5"><NAME>Program Code</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>5</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="6"><NAME>FDC REBATE NUMBER</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>6</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="7"><NAME>DOCUMENT TYPE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>7</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>APPLICATION ATTACHMENT  FOLLOWUP</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="8"><NAME>DOCUMENT STATUS</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>8</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>PROCESSED    READY   WAIT</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="9"><NAME>WORKED</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>9</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="10"><NAME>SOURCE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>10</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD></DOCUMENT_FIELDS><FULLTEXT>1</FULLTEXT></PROJECTATTRIBUTES></PVDM_ProjectAttributes></PROJECT></SEARCHRESULTS><NOTIFYCOUNT>43</NOTIFYCOUNT><DECIMALCHAR>.</DECIMALCHAR><USERSETTINGS><PVDM_UserSettings><USERRIGHTS><CHANGEPASSWORD>0</CHANGEPASSWORD></USERRIGHTS></PVDM_UserSettings></USERSETTINGS><USERWORKFLOW>0</USERWORKFLOW></PVDM_ExecuteQuery_Project>';
  private static final String TEST_RETREIVE_REQ = '<?xml version="1.0" encoding="UTF-8"?><LoadDocInfo_REQUEST><FUNCTION><NAME>LoadDocInfo</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><SESSIONID>506A6F9DDC6BBC8D3DFF727C269987488D009F93C6A7B7996DA9BE4A5035278D5797D673089303F42E4681F52132542507421E18FCFDF0ED4F222B614FB5BD65</SESSIONID><PARAMETERS /><SOURCEIP /><PROJID>5</PROJID><DOCIDLIST>97</DOCIDLIST><PAGERANGE>1</PAGERANGE></PARAMETERS></FUNCTION></LoadDocInfo_REQUEST>';
  private static final String TEST_RETREIVE_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_LoadDocInfo><ENTITYID>6590</ENTITYID><GOODSESSION>1</GOODSESSION><SESSIONID>6AC797D956B4AE9BFE2F3302009FB7FBD7D77D401F0DC9CC2245C0B4E5685921844627D7E5E3BEACB478B7513C1F4F0096F4AC0B810F7E76FA6102630598F7F3</SESSIONID><ENTITYADMINSYSTEM>1</ENTITYADMINSYSTEM><ENTITYADMINWORKFLOW>1</ENTITYADMINWORKFLOW><ENTLICLITESCAN>1</ENTLICLITESCAN><ENTLICWORKFLOWTOOLKIT>0</ENTLICWORKFLOWTOOLKIT><USERNAME>CVITONE</USERNAME><USERFULLNAME>Chris Vitone</USERFULLNAME><USERID>34</USERID><DEMOMODE>0</DEMOMODE><LICWORKFLOW>0</LICWORKFLOW><ADMINPACKLICENSE>1</ADMINPACKLICENSE><DOCIDLIST>97,98,101,106,521</DOCIDLIST><REGISTEREDFILETYPES /><LASTFTQUERY /><LASTFTOPTIONS /><CACHEENCRYPTKEYVALUE /><PROJECT PROJID="5"><PROJNAME>V3 TEST</PROJNAME><RIGHTS>-1</RIGHTS><DOCASSOCS>0</DOCASSOCS><PVDM_ProjectAttributes><PROJECTATTRIBUTES><DOCUMENT_FIELDS COUNT="10"><FIELD FIELDNUM="1"><NAME>Last Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>1</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="2"><NAME>EFI Transaction ID</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>2</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="3"><NAME>Utility Account Number</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>3</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="4"><NAME>File Name</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>4</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="5"><NAME>Program Code</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>5</ORDER><REQUIRED>1</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="6"><NAME>FDC REBATE NUMBER</NAME><TYPE>Number</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>6</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="7"><NAME>DOCUMENT TYPE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>7</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>APPLICATION    ATTACHMENT  FOLLOWUP</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="8"><NAME>DOCUMENT STATUS</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>8</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>1</VALUESELECT><VALUESELECT>1</VALUESELECT><VALUELIST>PROCESSED    READY   WAIT</VALUELIST><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="9"><NAME>WORKED</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>9</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD><FIELD FIELDNUM="10"><NAME>SOURCE</NAME><TYPE>Text</TYPE><FORMAT /><WILDCARD>0</WILDCARD><ORDER>10</ORDER><REQUIRED>0</REQUIRED><WFTRIGGER>0</WFTRIGGER><EXTENDEDATTRS><VALUESELECT>0</VALUESELECT><VALUESELECT>0</VALUESELECT><VALUELIST /><VALUEGETDGLIST>0</VALUEGETDGLIST></EXTENDEDATTRS></FIELD></DOCUMENT_FIELDS><FULLTEXT>1</FULLTEXT></PROJECTATTRIBUTES></PVDM_ProjectAttributes></PROJECT><DOC DOCID="97"><DUPEID>0</DUPEID><SECURED>0</SECURED><CHECKOUTTIME /><CHECKOUTUSERID>0</CHECKOUTUSERID><SOURCEDOCID>0</SOURCEDOCID><DGID>6</DGID><FTINDEX>2000</FTINDEX><CREATEDATE>2012-08-06 07:35:46</CREATEDATE><LOCKDATE /><LOCKINFO /><DESTDATE /><DESTINFO /><DESTLISTID /><DOCINDEX1>VITONE</DOCINDEX1><DOCINDEX2>345</DOCINDEX2><DOCINDEX3>NVC847</DOCINDEX3><DOCINDEX4>BETA.txt</DOCINDEX4><DOCINDEX5>K1</DOCINDEX5><DOCINDEX6>[Blank]</DOCINDEX6><DOCINDEX7>[Blank]</DOCINDEX7><DOCINDEX8>[Blank]</DOCINDEX8><DOCINDEX9>INCOMING</DOCINDEX9><DOCINDEX10>[Blank]</DOCINDEX10><DOCINDEXINFO>VITONE 345 NVC847  BETA.txt    K1  [Blank] [Blank] [Blank] INCOMING    [Blank]</DOCINDEXINFO><TOTALPAGES>1</TOTALPAGES><PAGECOUNTS>1</PAGECOUNTS><FILELISTS>20120806\\073545504-15-1.TXT</FILELISTS><OBJTYPES>2</OBJTYPES><OBJIDS>97</OBJIDS><HASHTYPES>1</HASHTYPES><HASHINFOS /><VERSIONTIMES>2012-08-06 07:35:46</VERSIONTIMES><DGIDS>6</DGIDS><ORIGDGNAMES>Attachments/Added Documents</ORIGDGNAMES><DGENCRYPTKEYVALUES /><DOCIDS>97</DOCIDS></DOC><CACHE><PAGESTART>1</PAGESTART><PAGEEND>1</PAGEEND><CACHEURL>http://www.google.com/images/srpr/logo3w.png</CACHEURL><CACHEPATH>\\\\sd-netapp1a.dendmz\\DMZWebCache\\C\\82EE8451-322C-459E-B7C0-5D526C5E6915\\</CACHEPATH><PAGE PAGENUM="1"><FILE>20121028105424406-6590-34-1.TXT</FILE><OBJTYPE>2</OBJTYPE><ORIGDGNAME>Attachments/Added Documents</ORIGDGNAME><DGFILEPATH>20120806\\073545504-15-1.TXT</DGFILEPATH></PAGE><CACHEDOC><DOCID>97</DOCID><DOCPAGESTART>1</DOCPAGESTART><DOCPAGEEND>1</DOCPAGEEND></CACHEDOC></CACHE><NOTIFYCOUNT>43</NOTIFYCOUNT><DECIMALCHAR>.</DECIMALCHAR><USERSETTINGS><PVDM_UserSettings><USERRIGHTS><CHANGEPASSWORD>0</CHANGEPASSWORD></USERRIGHTS></PVDM_UserSettings></USERSETTINGS><USERWORKFLOW>0</USERWORKFLOW></PVDM_LoadDocInfo>';
  private static final String TEST_UPLOAD_REQ = '<?xml version="1.0" encoding="UTF-8"?><AttachNewDocToProjectEx_REQUEST><FUNCTION><NAME>AttachNewDocToProjectEx</NAME><PARAMETERS><ENTITYID>6590</ENTITYID><SESSIONID>B7C3479AA80723CECE037D0B6EBD8587E8B977A9D6CB9637FF1547A5230B824FA8FC19320D07755D764822B1AAEF28A4AA7C2603342AC70DB4FF8F3C70ABB371</SESSIONID><PARAMETERS /><SOURCEIP /><PROJID>5</PROJID><FIELDNAMES>File Name|Utility Account Number|EFI Transaction ID|Program Code|Last Name</FIELDNAMES><FIELDVALUES>||||VITONE</FIELDVALUES><ORIGINALFILENAME>images1.jpg</ORIGINALFILENAME><ORIGINALFILENAMEFT /><SAVEDFILEFT /><ADDTOFOLDER /><INFILEDATA dt:dt="bin.base64" xmlns:dt="urn:schemas-microsoft-com:datatypes"></INFILEDATA><INFILEDATAFT dt:dt="bin.base64" xmlns:dt="urn:schemas-microsoft-com:datatypes" /></PARAMETERS></FUNCTION></AttachNewDocToProjectEx_REQUEST>';
  private static final String TEST_UPLOAD_RESP = '<?xml version="1.0" encoding="UTF-8"?><PVDM_AttachNewDocToProjectEx><ENTITYID>6590</ENTITYID><GOODSESSION>1</GOODSESSION><SESSIONID>BC78D05047C35C2A6670D07B5B4130F2B7FA467A1BA20FEF27FB459DC8503601EB6F3E08E555D1DE5614A0CD7A8371F1B071C91EE92236EAD9EBA4424C3156B3</SESSIONID><ENTITYADMINSYSTEM>1</ENTITYADMINSYSTEM><ENTITYADMINWORKFLOW>1</ENTITYADMINWORKFLOW><ENTLICLITESCAN>1</ENTLICLITESCAN><ENTLICWORKFLOWTOOLKIT>0</ENTLICWORKFLOWTOOLKIT><USERNAME>CVITONE</USERNAME><USERFULLNAME>Chris Vitone</USERFULLNAME><USERID>34</USERID><DEMOMODE>0</DEMOMODE><LICWORKFLOW>0</LICWORKFLOW><ADMINPACKLICENSE>1</ADMINPACKLICENSE><NEWDOCID>521</NEWDOCID><DOC DOCID="521"><DUPEID>0</DUPEID><SECURED>0</SECURED><CHECKOUTTIME /><CHECKOUTUSERID>0</CHECKOUTUSERID><SOURCEDOCID>0</SOURCEDOCID><DGID>6</DGID><FTINDEX>-1</FTINDEX><CREATEDATE>2012-10-28 10:52:35</CREATEDATE><LOCKDATE /><LOCKINFO /><DESTDATE /><DESTINFO /><DESTLISTID /><DOCINDEX1>VITONE</DOCINDEX1><DOCINDEX2>[Blank]</DOCINDEX2><DOCINDEX3>[Blank]</DOCINDEX3><DOCINDEX4>[Blank]</DOCINDEX4><DOCINDEX5>[Blank]</DOCINDEX5><DOCINDEX6>[Blank]</DOCINDEX6><DOCINDEX7>[Blank]</DOCINDEX7><DOCINDEX8>[Blank]</DOCINDEX8><DOCINDEX9>[Blank]</DOCINDEX9><DOCINDEX10>[Blank]</DOCINDEX10><DOCINDEXINFO>VITONE [Blank] [Blank] [Blank] [Blank] [Blank] [Blank] [Blank] [Blank] [Blank]</DOCINDEXINFO></DOC><ADDEDTOFOLDERID /><ADDEDTOFOLDERMSG /><NOTIFYCOUNT>43</NOTIFYCOUNT><DECIMALCHAR>.</DECIMALCHAR><USERSETTINGS><PVDM_UserSettings><USERRIGHTS><CHANGEPASSWORD>0</CHANGEPASSWORD></USERRIGHTS></PVDM_UserSettings></USERSETTINGS><USERWORKFLOW>0</USERWORKFLOW></PVDM_AttachNewDocToProjectEx>';

  public String XmlRequest {get; private set;}
  public String XmlResponse {get; private set;}
  
  private static String TARGET_URL = 'https://login.imagesilo.com/HTTPInterface.aspx';
  private static String ENTITY_ID = '6590';
  
  private boolean isTest = false;
  private String sessionId;
    
   public class Project {
     public String name {get; set;}
     public Integer id {get; set;}
     public List<String> indexes {get; private set;}
     
     public Project(Integer id, String name){ 
       this.id = id; 
       this.name = name; 
       indexes = new List<String>();
     }
   }   
   
    public class Document {
        public Integer id {get; set; }
        public String cacheUrl {get; set;}
        public String fileName {get; set;}
        public List<String> propertyValues {get; set;}
         
        public Document(Integer id){
            this.id = id;
       }
    }
    
    public ImageSiloConnector(){ this(false); }
    
    public ImageSiloConnector(boolean isTest){ this.isTest = isTest; }
   
    public void login(String user, String pass){
        Dom.Document request = new Dom.Document();
        Dom.XmlNode root = request.createRootElement('LOGINUSEREX3_REQUEST', null, null);
        Dom.XmlNode funcNode = addNode(root, 'FUNCTION');
        addNode(funcNode, 'NAME').addTextNode('LOGINUSEREX3');
        
        Dom.XmlNode paramNode = addNode(funcNode, 'PARAMETERS');
        addNode(paramNode, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramNode, 'USERNAME').addTextNode(user);
        addNode(paramNode, 'PASSWORD').addTextNode(pass);
        addNode(paramNode, 'SOURCEIP');
        addNode(paramNode, 'CORLICTYPE');
        addNode(paramNode, 'CLIENTPINGABLE').addTextNode('0');
        addNode(paramNode, 'REMOTEAUTH').addTextNode('0');
        
        System.debug('IS TEST: '+isTest);
        Dom.Document response = !isTest ? sendRequest(request) : sendRequest(TEST_LOGIN_REQ, TEST_LOGIN_RESP);
        sessionId = null;
        
        String error = getError(response);
        if( error == null ){
          if( response.getRootElement().getChildElement('SESSIONID', null) == null ){
            error = 'UNKNOWN LOGIN ERROR';
          }
        }
        
        if( error != null ){
          throw new RemoteStorageException(error);
        }
        
        sessionId = response.getRootElement().getChildElement('SESSIONID', null).getText();
    }
  
    public List<Project> getProjects(){
        Dom.Document doc = new Dom.Document();
        Dom.XmlNode root = doc.createRootElement('LoadSystemAccess_REQUEST', null, null);
        Dom.XmlNode funcNode = addNode(root, 'FUNCTION');
        addNode(funcNode, 'NAME').addTextNode('LoadSystemAccess');
        Dom.XmlNode paramNode = addNode(funcNode, 'PARAMETERS');
        addNode(paramNode, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramNode, 'SESSIONID').addTextNode(sessionId);
        addNode(paramNode, 'SOURCEIP');
        
        Dom.Document response = !isTest ? sendRequest(doc) : sendRequest(TEST_LOAD_REQ, TEST_LOAD_RESP);
        String error = getError(response);
        
        if( error != null )
          throw new RemoteStorageException(error);
          
        List<Dom.XmlNode> projNodes = response.getRootElement().getChildElement('PVDM_UserProjectAccess', null).getChildren();
        List<Project> projects = new List<Project>();
        
        for(Dom.XmlNode projNode : projNodes){
          if( !projNode.getName().equalsIgnoreCase('project')) continue;
          
          Project p = new Project( 
            Integer.valueOf(projNode.getAttributeValue('PROJID', null)),
            projNode.getChildElement('PROJNAME', null).getText());
          
          projects.add(p);
              
          List<Dom.XmlNode> nodes = findNodes(projNode, new String[]{'PVDM_ProjectAttributes', 'PROJECTATTRIBUTES', 'DOCUMENT_FIELDS', 'FIELD'});
          if( nodes != null ){
            for(Dom.XmlNode n : nodes){
              p.indexes.add( n.getChildElement('NAME', null).getText() );
            }
          }
        }
        
        return projects;
    }
  
    public boolean submitSearchCriteria(Integer projectId, Map<String, String> parameters){
    
        Dom.Document doc = new Dom.Document();
        Dom.XmlNode root = doc.createRootElement('SubmitSearchCriteria_Project_REQUEST', null, null);
        Dom.XmlNode funcNode = addNode(root, 'FUNCTION');
        addNode(funcNode, 'NAME').addTextNode('SubmitSearchCriteria_Project');
        
        String[] keys = new List<String>();
        String[] values = new List<String>();
        for(String key : parameters.keySet()){
          keys.add(key);
          values.add( parameters.get(key) );
        }
        
        Dom.XmlNode paramNode = addNode(funcNode, 'PARAMETERS');
        addNode(paramNode, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramNode, 'SESSIONID').addTextNode(sessionId);
        addNode(paramNode, 'PARAMETERS');
        addNode(paramNode, 'SOURCEIP');
        addNode(paramNode, 'FIELDNAMES').addTextNode(keys.isEmpty() ? '' : Utils.concat(keys, ' | '));
        addNode(paramNode, 'FROMFIELDS').addTextNode(values.isEmpty() ? '' : Utils.concat(values, ' | '));
        addNode(paramNode, 'TOFIELDS');
        addNode(paramNode, 'SORTBY');
        addNode(paramNode, 'SEARCHTYPE').addTextNode('AND');
        addNode(paramNode, 'FTQUERY');
        addNode(paramNode, 'FTOPTIONS');
        addNode(paramNode, 'PROJID').addTextNode(projectId+'');
        
        Dom.Document response = !isTest ? sendRequest(doc) : sendRequest(TEST_SEARCH_REQ, TEST_SEARCH_RESP);
        String error = getError(response);
        
        if( error != null )
          throw new RemoteStorageException(error);
        
        boolean success = '0'.equals( response.getRootElement().getChildElement('RESULTVAL', null).getText() );
        
        return success;
  }
  
    public List<Document> executeQuery(Integer projectId){
        Dom.Document doc = new Dom.Document();
        Dom.XmlNode root = doc.createRootElement('ExecuteQuery_Project_REQUEST', null, null);
        Dom.XmlNode funcNode = addNode(root, 'FUNCTION');
        addNode(funcNode, 'NAME').addTextNode('ExecuteQuery_Project');
        
        Dom.XmlNode paramNode = addNode(funcNode, 'PARAMETERS');
        addNode(paramNode, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramNode, 'SESSIONID').addTextNode(sessionId);
        addNode(paramNode, 'PARAMETERS');
        addNode(paramNode, 'SOURCEIP');
        addNode(paramNode, 'FORMATVALUES').addTextNode('true');
        addNode(paramNode, 'PROJID').addTextNode(projectId+'');
        addNode(paramNode, 'STARTINGDOCID').addTextNode('0');
        
        Dom.Document response = !isTest ? sendRequest(doc) : sendRequest(TEST_LIST_REQ, TEST_LIST_RESP);
        String error = getError(response);
        if( error != null ) throw new RemoteStorageException(error);
        
        List<Dom.XmlNode> docNodes = findNodes(response.getRootElement(), new String[]{'SEARCHRESULTS', 'DOCS', 'DOC'});
        List<Document> docs = new List<Document>();
        if(docNodes != null ){
          for(Dom.XmlNode docNode : docNodes){
            Document iDoc = new Document( Integer.valueOf(docNode.getAttributeValue('DOCID', null)) );
            iDoc.propertyValues = parseIndexes(docNode);
            docs.add(iDoc);
          }
        }
        return docs;
    }
  
    public Document[] loadDocumentInfo(Integer projectId, Integer[] documentIds){
        
        String docIdList = Utils.concat(documentIds, ',');
        
        System.debug('DOCIDS: '+docIdList);
        Dom.Document request = new Dom.Document();
        Dom.XmlNode root = request.createRootElement('LoadDocInfo_REQUEST', null, null);
        Dom.XmlNode funcNode = addNode(root, 'FUNCTION');
        addNode(funcNode, 'NAME').addTextNode('LoadDocInfo');
        Dom.XmlNode paramNode = addNode(funcNode, 'PARAMETERS');
        addNode(paramNode, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramNode, 'SESSIONID').addTextNode(sessionId);
        addNode(paramNode, 'PARAMETERS');
        addNode(paramNode, 'SOURCEIP');
        addNode(paramNode, 'PROJID').addTextNode(projectId+'');
        addNode(paramNode, 'DOCIDLIST').addTextNode(docIdList);
        addNode(paramNode, 'PAGERANGE').addTextNode( documentIds.size() == 1 ? '1' : '1-' + documentIds.size());
        
        Dom.Document response = !isTest ? sendRequest(request) : sendRequest(TEST_RETREIVE_REQ, TEST_RETREIVE_RESP);
        String error = getError(response);
        
        System.debug('REQ: '+request.toXmlString());
        System.debug('RESP: '+response.toXmlString());
        
        if( error != null ) throw new RemoteStorageException(error);
        /* PROJECT INFO IS ALSO RETURNED
        List<Dom.XmlNode> indexNodes = findNodes(response.getRootElement(), new String[]{'PROJECT', 'PVDM_ProjectAttributes', 'PROJECTATTRIBUTES', 'DOCUMENT_FIELDS', 'FIELD'});
        List<String> indexKeys = new List<String>();
        
        if( indexNodes != null ){
          for(Dom.XmlNode indexNode : indexNodes){
            indexKeys.add( indexNode.getChildElement('NAME', null).getText() );
          }
        }
        */
        Dom.XmlNode[] docNodes = findNodes(response.getRootElement(), new String[]{'DOC'});
        System.debug('THERE ARE '+docNodes.size()+' NODES');
        
        if( docNodes != null ){
            Document[] docs = new List<Document>();
            
            for(Dom.XmlNode docNode : docNodes){
                System.debug('PROCESSING NODE');
                Document doc = new Document( Integer.valueOf(docNode.getAttributeValue('DOCID', null)) );
                doc.propertyValues = parseIndexes(response.getRootElement().getChildElement('DOC', null));
                doc.cacheUrl = response.getRootElement().getChildElement('CACHE', null).getChildElement('CACHEURL', null).getText() +
                  response.getRootElement().getChildElement('CACHE', null).getChildElement('PAGE', null).getChildElement('FILE', null).getText();
                //doc.fileName = response.getRootElement().getChildElement('DOC', null).getChildElement('FILELISTS', null).getText();
                doc.fileName = response.getRootElement().getChildElement('CACHE', null).getChildElement('PAGE', null).getChildElement('FILE', null).getText();
                docs.add(doc);
            }
            
            return docs;
        }
        return null;
  } 
  
  public Integer uploadDocument(String fileName, Blob data, Integer projectId, Map<String, String> indexes){
        Dom.Document request = new Dom.Document();
        Dom.XmlNode root = request.createRootElement('AttachNewDocToProjectEx_REQUEST', null, null);
        Dom.XmlNode functionEl = root.addChildElement('FUNCTION',null,null);
        addNode(functionEl, 'NAME').addTextNode('AttachNewDocToProjectEx');
        Dom.XmlNode paramEl = addNode(functionEl, 'PARAMETERS');
        
        List<String> keys = new List<String>();
        List<String> values = new List<String>();
        if( indexes != null ){
            for(String key : indexes.keySet()){
              keys.add(key);
              values.add(indexes.get(key));
            }
        }
                
        addNode(paramEl, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramEl, 'SESSIONID').addTextNode(sessionId);
        addNode(paramEl, 'PARAMETERS');
        addNode(paramEl, 'SOURCEIP');
        addNode(paramEl, 'PROJID').addTextNode(projectId+'');
        addNode(paramEl, 'FIELDNAMES').addTextNode(Utils.concat(keys, '|'));
        addNode(paramEl, 'FIELDVALUES').addTextNode(Utils.concat(values, '|'));
        addNode(paramEl, 'ORIGINALFILENAME').addTextNode(fileName);
        addNode(paramEl, 'ORIGINALFILENAMEFT');
        addNode(paramEl, 'SAVEDFILEFT');
        addNode(paramEl, 'ADDTOFOLDER');
        
        Dom.XmlNode dataNode = addNode(paramEl, 'INFILEDATA');
        dataNode.setNamespace('dt', 'urn:schemas-microsoft-com:datatypes');
        dataNode.setAttribute('dt:dt', 'bin.base64');
        dataNode.addTextNode( EncodingUtil.base64Encode(data) );
        
        Dom.XmlNode ftDataNode = addNode(paramEl, 'INFILEDATAFT');
        ftDataNode.setNamespace('dt', 'urn:schemas-microsoft-com:datatypes');
        ftDataNode.setAttribute('dt:dt', 'bin.base64');
        
        System.debug('UPLOAD REQUEST: '+request.toXmlString());
        Dom.Document response = !isTest ? sendRequest(request) : sendRequest(TEST_UPLOAD_REQ, TEST_UPLOAD_RESP);
        System.debug('UPLOAD RESPONSE: '+response.toXmlString());
        String error = getError(response);
        
        if( error != null ) throw new RemoteStorageException(error);
        
        return Integer.valueOf(response.getRootElement().getChildElement('DOC', null).getAttributeValue('DOCID', null));
  }
  
    public void setDocumentIndexes(Integer projectId, Integer[] documentIds, Map<String, String> indexes){
    
        String docIdList = Utils.concat(documentIds, ','); 
        
        Dom.Document request = new Dom.Document();
        Dom.XmlNode root = request.createRootElement('UpdateDocEditInfo_REQUEST', null, null);
        Dom.XmlNode functionEl = root.addChildElement('FUNCTION',null,null);
        addNode(functionEl, 'NAME').addTextNode('UpdateDocEditInfo');
        Dom.XmlNode paramEl = addNode(functionEl, 'PARAMETERS');
        
        List<String> keys = new List<String>();
        List<String> values = new List<String>();
        for(String key : indexes.keySet()){
          keys.add(key);
          values.add(indexes.get(key) != null ? indexes.get(key) : '');
        }
        
        addNode(paramEl, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramEl, 'SESSIONID').addTextNode(sessionId);
        addNode(paramEl, 'PARAMETERS');
        addNode(paramEl, 'SOURCEIP');
        addNode(paramEl, 'PROJID').addTextNode(projectId+'');
        addNode(paramEl, 'DOCIDLIST').addTextNode(docIdList);
        addNode(paramEl, 'FIELDNAMES').addTextNode(Utils.concat(keys, '|'));
        addNode(paramEl, 'FIELDVALUES').addTextNode(Utils.concat(values, '|'));
        
        System.debug('UPDATE REQUEST: '+request.toXmlString());
        
        if( !isTest ){
            Dom.Document response = sendRequest(request);
            System.debug('UPDATE RESPONSE: '+response.toXmlString());
            String error = getError(response);
            if( error != null ) throw new RemoteStorageException(error);
        }
        
  }
 
    public void deleteDocuments(Integer projectId, Integer[] documentIds){
        String docIdList = Utils.concat(documentIds, ','); 
        
        Dom.Document request = new Dom.Document();
        Dom.XmlNode root = request.createRootElement('DeleteDocs_Project_REQUEST', null, null);
        Dom.XmlNode functionEl = root.addChildElement('FUNCTION',null,null);
        addNode(functionEl, 'NAME').addTextNode('DeleteDocs_Project');
        Dom.XmlNode paramEl = addNode(functionEl, 'PARAMETERS');
        
        addNode(paramEl, 'ENTITYID').addTextNode(ENTITY_ID);
        addNode(paramEl, 'SESSIONID').addTextNode(sessionId);
        addNode(paramEl, 'PARAMETERS');
        addNode(paramEl, 'SOURCEIP');
        addNode(paramEl, 'DOCIDLIST').addTextNode(docIdList);
        addNode(paramEl, 'PROJID').addTextNode(projectId+'');
        
        System.debug('REQUEST: '+request.toXmlString());
        
        if( !isTest ){
            Dom.Document response = sendRequest(request);
            System.debug('RESPONSE: '+response.toXmlString());
            
            String error = getError(response); 
            if( error != null ) throw new RemoteStorageException(error);
        }
    }
  
    private Dom.XmlNode addNode(Dom.XmlNode parent, String name){ return parent.addChildElement(name, null, null); }
  
    private Dom.Document sendRequest(Dom.Document doc) {
        Http h = new Http();
        HttpRequest req = new HttpRequest();
        req.setEndpoint(TARGET_URL);
        req.setMethod('POST');
        req.setHeader('content-type','text/XML');
        
        XmlRequest = doc.toXmlString();
        req.setBody(XmlRequest);
        
        HttpResponse res = h.send(req);
        Dom.Document resDoc = res.getBodyDocument();
        XmlResponse = resDoc.toXmlString();
        return resDoc;
    }
    
    //-- FOR TEST CASES ONLY
    private Dom.Document sendRequest(String xmlReq, String xmlResp){
        Dom.Document d = new Dom.Document();
        d.load(xmlResp);
        return d;
    }
    
    private String getError(Dom.Document doc){
        Dom.XmlNode errorNode = doc.getRootElement().getChildElement('ERROR', null);
        if( errorNode != null ){
            return '['+errorNode.getChildElement('NUMBER', null).getText()+'] {'+errorNode.getChildElement('SOURCE', null).getText()+'} '+errorNode.getChildElement('DESCRIPTION', null).getText();
        }
        return null;
    }
    
    private List<Dom.XmlNode> findNodes(Dom.XmlNode node, String[] targetPath){
      
      Dom.XmlNode cNode = node;
      for(Integer i=0; i < targetPath.size() - 1; i++){
        if( cNode.getChildElement(targetPath[i], null) == null) return null;
        cNode = cNode.getChildElement(targetPath[i], null);
      }
      
      List<Dom.XmlNode> nodes = new List<Dom.XmlNode>();
      for(Dom.XmlNode n : cNode.getChildElements()){
          System.debug('PROCESSING NODE: '+n.getName());
        if( n.getName().equalsIgnoreCase(targetPath[targetPath.size()-1]))
        {
          nodes.add(n);
        }
      }
      return nodes;
    }
    
    private List<String> parseIndexes(Dom.XmlNode node){
        Integer index = 1;
        List<String> values = new List<String>();
        do{
            String key = 'DOCINDEX'+index;
            Dom.XmlNode indexNode = node.getChildElement(key, null);
            if( indexNode == null ) break;
          
            System.debug(key+'=>'+indexNode.getText());
            values.add(indexNode.getText());
            index++;
        }while(true);
    
        return values;
    }

    @isTest(SeeAllData=true)
    public static void testIt(){
        ImageSiloConnector isc = new ImageSiloConnector(true);
        isc.login('cvitone', 'Fr1end');
        isc.getProjects();
        //isc.submitSearchCriteria(5, new Map<String, String>());
        //isc.executeQuery(5);
        isc.loadDocumentInfo(5, new Integer[]{97});
        //isc.uploadDocument('test.txt', Blob.valueOf('THIS IS A TEST'), 5, new Map<String, String>());
        //isc.setDocumentIndexes(5, new Integer[]{97}, new Map<String, String>{ 'TESTKEY' => 'TESTVAL' });
        //isc.deleteDocuments(6, new Integer[]{97});
    }
}